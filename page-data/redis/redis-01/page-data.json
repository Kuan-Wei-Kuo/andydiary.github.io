{"componentChunkName":"component---src-templates-blog-post-js","path":"/redis/redis-01/","result":{"data":{"site":{"siteMetadata":{"title":"Andy Diary"}},"markdownRemark":{"id":"289d76cd-504a-5d7e-9eb3-7cd670f063df","excerpt":"章節 CH1. SpringBoot 與 Redis 相遇\r\nCH2. SpringBoot 與 Redis 相遇 - Jackson 序列化設定\r\nCH3. SpringBoot 與 Redis 相遇 - 分散式鎖\r\nCH4. SpringBoot 與 Redis…","html":"<h2>章節</h2>\n<p>CH1. SpringBoot 與 Redis 相遇<br>\r\nCH2. SpringBoot 與 Redis 相遇 - Jackson 序列化設定<br>\r\nCH3. SpringBoot 與 Redis 相遇 - 分散式鎖<br>\r\nCH4. SpringBoot 與 Redis 相遇 - 超賣情境</p>\n<h2>前言</h2>\n<p>因為行動裝置的普及化，人手一支手機皆可上網進行網站操作，造就現代網站的流量日漸升高。在訪問次數如此平凡的情況下，對於資料庫造成莫大的負擔，為了解決這個問題，我們通常會採用 Cache 來讓我們加速訪問，減少資料庫的負擔，而最常見的 Cache Server 也就是我們常聽到的 Redis。</p>\n<p>本文將會簡單地介紹 Redis 以及如何與 SpringBoot 3 進行整合。</p>\n<h2>What is Redis</h2>\n<p>Redis 是一套開源且高性能的資料庫系統，資料通常存放於記憶體中，也提供持久化機制。而 Redis 主要使用 Kev-Value 資料結構來進行資料儲存，所以我們也可以說它是一種 NoSQL。</p>\n<h2>Maven dependencies</h2>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-data-redis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.commons<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>commons-pool2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>在這邊可以注意一下，我們除了引用 spring-boot-starter-data-redis 也一併使用了 commons-pool，原因在於接下來我們的設定有使用到 pool。</p>\n<p>除了上述以外，大家可以看到我們並沒有使用到 jedis，因為目前 SpringDataRedis 預設是使用 lettuce 作為預設使用的 library。</p>\n<h2>Yaml Configuration</h2>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis<span class=\"token punctuation\">-</span>example\r\n  <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span>\r\n      <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.145.10\r\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\r\n      <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\r\n      <span class=\"token key atrule\">timeout</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span>\r\n      <span class=\"token key atrule\">lettuce</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token key atrule\">pool</span><span class=\"token punctuation\">:</span>\r\n          <span class=\"token key atrule\">min-idle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\r\n          <span class=\"token key atrule\">max-idle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span>\r\n          <span class=\"token key atrule\">max-wait</span><span class=\"token punctuation\">:</span> <span class=\"token number\">-1</span>\r\n          <span class=\"token key atrule\">max-active</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span></code></pre></div>\n<p>在這邊我們簡單的介紹 pool 做了那些設定。</p>\n<ul>\n<li>min-idle: Connection Pool 最小的空閒連接數，只有在正數時有效。</li>\n<li>max-idle: Connection Pool 最大空閒連接數，若為負數代表不設限。</li>\n<li>max-wait: 當 Connection Pool 數量不足時，會有一個等待時間，若超出這個時間將會拋出錯誤，若為負數則不設限。</li>\n<li>max-active: Connection Pool 最大能夠分配的數量，若為負數則不設限。</li>\n</ul>\n<h2>Test</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Autowired</span>\r\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> redisTemplate<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token annotation punctuation\">@Test</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testRedisSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// 嘗試設定一個 Key 為 Hello，Value 為 World 的資料</span>\r\n    redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">// 嘗試取得 Key 為 Hello 的資料，並驗證其 Value 是否為 World</span>\r\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span>redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>在預設下，我們可以使用 RedisTemplate 來進行測試，主要動作為設定一個 Key 為 Hello，Value 為 World 的資料，並且測試其數值是否正確。</p>\n<h2>結論</h2>\n<p>至此我們簡單地完成了 Redis 與 SpringBoot 的整合，並且嘗試的操作，後面幾篇文章我們將會更加進一步的了解 Redis。</p>","frontmatter":{"title":"SpringBoot 與 Redis 相遇","date":"2023-07-03","description":null}},"previous":{"fields":{"slug":"/docker/簡單說說 Docker 網路/"},"frontmatter":{"title":"簡單說說 Docker 網路"}},"next":null},"pageContext":{"id":"289d76cd-504a-5d7e-9eb3-7cd670f063df","previousPostId":"552d7586-30ff-53ab-a416-01a1787d29dc","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}