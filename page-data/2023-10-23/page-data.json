{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023-10-23/","result":{"data":{"site":{"siteMetadata":{"title":"Andy Diary"}},"markdownRemark":{"id":"094cc1c8-629b-5c8b-bf98-62f8f0adf58a","excerpt":"長久以來使用 ModelMapper、MapStruct 進行對象屬性的 Copy，在某次專案的情境下，剛好用到了 BeanUtils.copyProperties…","html":"<p>長久以來使用 ModelMapper、MapStruct 進行對象屬性的 Copy，在某次專案的情境下，剛好用到了 BeanUtils.copyProperties，當然也很幸運地遇到效能問題，因此我也不禁好奇，都是映射工具，怎麼速度上的差異如此之大。</p>\n<h2>看看原始碼</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BeanUtils</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">copyProperties</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> target<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> editable<span class=\"token punctuation\">,</span>\r\n\t\t\t<span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> ignoreProperties<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">{</span>\r\n\r\n\t\t<span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Source must not be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Target must not be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> actualEditable <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>editable <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>editable<span class=\"token punctuation\">.</span><span class=\"token function\">isInstance</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Target class [\"</span> <span class=\"token operator\">+</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\r\n\t\t\t\t\t\t<span class=\"token string\">\"] not assignable to Editable class [\"</span> <span class=\"token operator\">+</span> editable<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\tactualEditable <span class=\"token operator\">=</span> editable<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n        <span class=\"token comment\">// 取得屬性以及set、get方法</span>\r\n\t\t<span class=\"token class-name\">PropertyDescriptor</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> targetPds <span class=\"token operator\">=</span> <span class=\"token function\">getPropertyDescriptors</span><span class=\"token punctuation\">(</span>actualEditable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> ignoredProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ignoreProperties <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>ignoreProperties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PropertyDescriptor</span> targetPd <span class=\"token operator\">:</span> targetPds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token comment\">// 取得set方法</span>\r\n\t\t\t<span class=\"token class-name\">Method</span> writeMethod <span class=\"token operator\">=</span> targetPd<span class=\"token punctuation\">.</span><span class=\"token function\">getWriteMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>writeMethod <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ignoredProps <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>ignoredProps<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>targetPd<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t\t<span class=\"token class-name\">PropertyDescriptor</span> sourcePd <span class=\"token operator\">=</span> <span class=\"token function\">getPropertyDescriptor</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> targetPd<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sourcePd <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token comment\">// 取得get方法</span>\r\n\t\t\t\t\t<span class=\"token class-name\">Method</span> readMethod <span class=\"token operator\">=</span> sourcePd<span class=\"token punctuation\">.</span><span class=\"token function\">getReadMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>readMethod <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t\t<span class=\"token class-name\">ResolvableType</span> sourceResolvableType <span class=\"token operator\">=</span> <span class=\"token class-name\">ResolvableType</span><span class=\"token punctuation\">.</span><span class=\"token function\">forMethodReturnType</span><span class=\"token punctuation\">(</span>readMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t\t<span class=\"token class-name\">ResolvableType</span> targetResolvableType <span class=\"token operator\">=</span> <span class=\"token class-name\">ResolvableType</span><span class=\"token punctuation\">.</span><span class=\"token function\">forMethodParameter</span><span class=\"token punctuation\">(</span>writeMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t\t\t\t\t<span class=\"token comment\">// Ignore generic types in assignable check if either ResolvableType has unresolvable generics.</span>\r\n\t\t\t\t\t\t<span class=\"token keyword\">boolean</span> isAssignable <span class=\"token operator\">=</span>\r\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">(</span>sourceResolvableType<span class=\"token punctuation\">.</span><span class=\"token function\">hasUnresolvableGenerics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> targetResolvableType<span class=\"token punctuation\">.</span><span class=\"token function\">hasUnresolvableGenerics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">ClassUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isAssignable</span><span class=\"token punctuation\">(</span>writeMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getParameterTypes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> readMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getReturnType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\r\n\t\t\t\t\t\t\t\t\t\ttargetResolvableType<span class=\"token punctuation\">.</span><span class=\"token function\">isAssignableFrom</span><span class=\"token punctuation\">(</span>sourceResolvableType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isAssignable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Modifier</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPublic</span><span class=\"token punctuation\">(</span>readMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t\t\t\t\treadMethod<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\r\n                                <span class=\"token comment\">// 通過反射調用get方法，取得來源屬性值</span>\r\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">Object</span> value <span class=\"token operator\">=</span> readMethod<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Modifier</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPublic</span><span class=\"token punctuation\">(</span>writeMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t\t\t\t\twriteMethod<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\r\n                                <span class=\"token comment\">// 通過反射調用set方法，設定目標屬性值</span>\r\n\t\t\t\t\t\t\t\twriteMethod<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\t\t\t\t\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FatalBeanException</span><span class=\"token punctuation\">(</span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"token string\">\"Could not copy property '\"</span> <span class=\"token operator\">+</span> targetPd<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"' from source to target\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>簡單的看看原始碼，網路上已經有很多大神的解析，我們應該只要稍微順過一下，首先我們會取得所有目標的屬性資料，之後進行迴圈並且使用反射對目標與來源進行數值的取得與設定。</p>\n<p>拋開這些檢查不說，反射就是一個問題來源。</p>\n<h2>反射是不是很慢</h2>\n<p>是，在 Java17 之前確實存在效能議題，但這個議題是可見的，詳細資訊可看此文章(<img src=\"https://blogs.oracle.com/javamagazine/post/java-reflection-performance\" alt=\"The performance implications of Java reflection\">)。</p>\n<p>由上述文章說明的反射議題，我們可以來測試看看，反射與直接進行Set還慢。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Call</span> <span class=\"token punctuation\">{</span>\r\n    \r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>openjdk<span class=\"token punctuation\">.</span>jmh<span class=\"token punctuation\">.</span></span>Main</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Benchmark</span>\r\n    <span class=\"token annotation punctuation\">@Fork</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> warmups <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token annotation punctuation\">@OutputTimeUnit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NANOSECONDS</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token annotation punctuation\">@BenchmarkMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Mode<span class=\"token punctuation\">.</span>AverageTime</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">directCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">Person</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Doe\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">Person</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">setFirstName</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">getFirstName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">setLastName</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">getLastName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Benchmark</span>\r\n    <span class=\"token annotation punctuation\">@Fork</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> warmups <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token annotation punctuation\">@OutputTimeUnit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NANOSECONDS</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token annotation punctuation\">@BenchmarkMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Mode<span class=\"token punctuation\">.</span>AverageTime</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reflectiveCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InvocationTargetException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">NoSuchMethodException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IllegalAccessException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IntrospectionException</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">Person</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Doe\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">Person</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">BeanInfo</span> beanInfo <span class=\"token operator\">=</span> <span class=\"token class-name\">Introspector</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBeanInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">PropertyDescriptor</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> propertyDescriptors <span class=\"token operator\">=</span> beanInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyDescriptors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PropertyDescriptor</span> propertyDescriptor <span class=\"token operator\">:</span> propertyDescriptors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">Method</span> readMethod <span class=\"token operator\">=</span> propertyDescriptor<span class=\"token punctuation\">.</span><span class=\"token function\">getReadMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           \r\n            <span class=\"token class-name\">Method</span> writeMethod <span class=\"token operator\">=</span> propertyDescriptor<span class=\"token punctuation\">.</span><span class=\"token function\">getWriteMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>writeMethod <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n                <span class=\"token class-name\">Object</span> value <span class=\"token operator\">=</span> readMethod<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                writeMethod<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>我們利用 Beanchmark 來檢視效能到底如何。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Benchmark            Mode  Cnt    Score   Error  Units\r\nCall.directCall      avgt    5    0.364 ± 0.043  ns/op\r\nCall.reflectiveCall  avgt    5  104.245 ± 3.031  ns/op</code></pre></div>\n<p>搭配上述的文章，我們可以合理的推斷，確實 BeanUtils.copyProperties 效能與反射使用有關，可能有能會說 BeanUtils 也有進行緩存 Method，讓取得 Method 更加快速，我相信也確實有所幫助。</p>\n<p>反過來說，如果今天沒有這一層緩存，BeanUtils.copyProperties 大概會慢到烏龜跑贏兔子了，更何況大量資料，當然這次僅僅是安迪透過原始碼以及網路上文章進行的一個測試所得到的結論。</p>\n<h2>結論</h2>\n<p>結論就是安迪我又乖乖地切回到使用 MapStruct，果然效能又提升了上去，因為 MapStruct 並沒有使用反射而是透過方法來直接進行調用，速度也快上不少，當然 MapStruct 也是有一些雷需要踩，這邊就不加以贅述了。</p>\n<p>安迪這次文章邊喝酒邊寫，人生就是這樣，頭暈也要搞些心得與實驗，關於 BeanUtil.copyProperties 的效能議題，國外大大都有很深入的說明，大家有興趣可以自己爬來看看。</p>","frontmatter":{"title":"BeanUtils.copyProperties 為什麼慢","date":"2023-10-23","description":null}},"previous":{"fields":{"slug":"/淺談負載均衡 Webscoket 消息共享問題/"},"frontmatter":{"title":"淺談負載均衡 Webscoket 消息共享問題"}},"next":null},"pageContext":{"id":"094cc1c8-629b-5c8b-bf98-62f8f0adf58a","previousPostId":"5989e371-09fd-59cc-8a75-2f81f794dce6","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}