{"componentChunkName":"component---src-templates-blog-post-js","path":"/【Docker】Container 所造成的硬碟空間不足/","result":{"data":{"site":{"siteMetadata":{"title":"Andy Diary"}},"markdownRemark":{"id":"21bfbfdd-6dce-5d33-b99a-a1d1716ed2b9","excerpt":"事情是這樣的 在某年某月某一天，同事跑來跟我說測試機的 Docker Host 容量爆炸啦! 我第一步先打開 Docker Host 確認狀況，發現 Container 數量並沒不多，並且使用下面指令查詢 Docker 空間分佈: 得到的答案讓我覺得事情精彩了，Container、Image、Volume…","html":"<h2>事情是這樣的</h2>\n<p>在某年某月某一天，同事跑來跟我說測試機的 Docker Host 容量爆炸啦! 我第一步先打開 Docker Host 確認狀況，發現 Container 數量並沒不多，並且使用下面指令查詢 Docker 空間分佈:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> system <span class=\"token function\">df</span></code></pre></div>\n<p>得到的答案讓我覺得事情精彩了，Container、Image、Volume 並沒有花費多少空間，理應剩餘很多空間才對，這時候我只好去查一下，到底 Host 空間分佈是如何:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">df</span> <span class=\"token parameter variable\">-h</span></code></pre></div>\n<p>果然是根目錄已經滿，這時候我決定開大絕招，直接將根目錄中的 TOP 10 大的檔案找出來:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-printf</span> ‘%s %p<span class=\"token punctuation\">\\</span>n’<span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-nr</span> <span class=\"token operator\">|</span> <span class=\"token function\">head</span> <span class=\"token parameter variable\">-10</span></code></pre></div>\n<p>好的，我們要準備看到 /var/lib/docker/containers/CONTAINER_ID/CONTAINER_ID-json.log 是如此地想要往前擠。</p>\n<p>讓我們思考一下，是為何會發生這個問題，其實想一下也不難，每個 Container 其實都有自己的 system log，基本上這些 log 都會放在上述的路徑當中，因此我們要做的就是重新清空 log 並且在事後再 daemon.json 內加入 system log 的大小限制。</p>\n<p>首先我們要清空 system log，但這前提請大家記得先確認可以清空，不要傻傻的。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'truncate -s 0 /var/lib/docker/containers/*/*-json.log'</span></code></pre></div>\n<p>當然清空後，我們得在 demon.json 中加上 log size limit 的設定。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\r\n  <span class=\"token string\">\"log-driver\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"json-file\"</span>,\r\n  <span class=\"token string\">\"log-opts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"max-size\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"10m\"</span>,\r\n    <span class=\"token string\">\"max-file\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"3\"</span>,\r\n    <span class=\"token string\">\"labels\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"production_status\"</span>,\r\n    <span class=\"token string\">\"env\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"os,customer\"</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>之後請記得重新啟動 Docker，不要傻傻地以為這樣就好囉。</p>\n<h2>參考</h2>\n<p><a href=\"https://docs.docker.com/config/containers/logging/configure/\">https://docs.docker.com/config/containers/logging/configure/</a>\r\n<a href=\"https://stackoverflow.com/questions/41091634/how-to-clean-docker-container-logs\">https://stackoverflow.com/questions/41091634/how-to-clean-docker-container-logs</a></p>","frontmatter":{"title":"【Docker】Container 所造成的硬碟空間不足","date":"2023-02-21","description":null}},"previous":{"fields":{"slug":"/【Java】談談 Stack 與 Heap 的生活/"},"frontmatter":{"title":"【Java】談談 JVM 的 Stack 與 Heap"}},"next":{"fields":{"slug":"/elk/【ELK】要不來點 ELK/"},"frontmatter":{"title":"【ELK】要不來點 ELK"}}},"pageContext":{"id":"21bfbfdd-6dce-5d33-b99a-a1d1716ed2b9","previousPostId":"6843c007-669c-58ec-ab6a-ee631f0fde0a","nextPostId":"0b22ddce-f37a-599b-a35f-2d2b2bfc6848"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}