{"componentChunkName":"component---src-templates-blog-post-js","path":"/kubernetes/rke-install/","result":{"data":{"site":{"siteMetadata":{"title":"Andy Diary"}},"markdownRemark":{"id":"5e253fb3-94a8-5a54-9c61-a69dea1fc405","excerpt":"近期 SideProject 需要使用到 RKE 在這邊我稍微紀錄一下安裝方式，順便分享給大家，避免踩到無故的雷。 為何使用 RKE 近年來地端 Kubernetes engine 越來越多，在這些的選擇中，我們選擇了使用 RKE…","html":"<p>近期 SideProject 需要使用到 RKE 在這邊我稍微紀錄一下安裝方式，順便分享給大家，避免踩到無故的雷。</p>\n<h1>為何使用 RKE</h1>\n<p>近年來地端 Kubernetes engine 越來越多，在這些的選擇中，我們選擇了使用 RKE，最大的目的終究是看上他的社群發展較多，遇到許多問題我們也許能夠快速排查，再加上企業級支持。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">在這邊我們選擇的理由非常簡單，就是快，可支援我們快速產生 MVP。</code></pre></div>\n<h1>主機配置</h1>\n<table>\n<thead>\n<tr>\n<th align=\"center\">HOST</th>\n<th align=\"center\">IP</th>\n<th align=\"center\">DESC</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">rke-master-01</td>\n<td align=\"center\">192.168.144.11</td>\n<td align=\"center\">Management Server</td>\n</tr>\n<tr>\n<td align=\"center\">rke-node-01</td>\n<td align=\"center\">192.168.144.12</td>\n<td align=\"center\">Worker</td>\n</tr>\n<tr>\n<td align=\"center\">rke-node-02</td>\n<td align=\"center\">192.168.144.13</td>\n<td align=\"center\">Worker</td>\n</tr>\n</tbody>\n</table>\n<h1>前置動作</h1>\n<p>在 RKE 基礎下，我們並不需要幫每台 Worker 安裝 RKE，但每台 Worker 都需要安裝 Docker 並且 Management Server 不需要透過密碼，使用 SSH 即可登入主機，並且操作 Docker。</p>\n<p>也因此，在這邊的檢核點就是，可以使用 SSH 進行 docker ps 指令，如下顯示</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> <span class=\"token number\">192.168</span>.144.11 <span class=\"token string\">\"docker ps \"</span>\r\nCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\r\n\r\n<span class=\"token function\">ssh</span> <span class=\"token number\">192.168</span>.144.12 <span class=\"token string\">\"docker ps \"</span>\r\nCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\r\n\r\n<span class=\"token function\">ssh</span> <span class=\"token number\">192.168</span>.144.13 <span class=\"token string\">\"docker ps \"</span>\r\nCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</code></pre></div>\n<h1>Install RKE on Ubuntu 20.04</h1>\n<h2>Step 1. Download RKE</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/rancher/rke/releases/download/v1.4.6-rc1/rke_linux-amd64\r\n<span class=\"token function\">mv</span> rke_linux-amd64 rke</code></pre></div>\n<h2>Step 2. Make the RKE binary that you just downloaded executeable</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x rke\r\n<span class=\"token function\">mv</span> rke /usr/local/bin/rke</code></pre></div>\n<h2>Step 3. Get RKE version</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">rke <span class=\"token parameter variable\">--version</span>\r\nrke version v1.4.6-rc1</code></pre></div>\n<h1>Configuration RKE Cluster</h1>\n<h2>Step 1. Create cluster.yml</h2>\n<p>在這邊大家會看到 nodes 裡面只有方才設定得 144.12 Worker，在這邊因為我們有 144.13，因此我們一樣畫葫蘆的將其建立上去，大致上如下</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> cluster.yml\r\nnodes:\r\n- address: <span class=\"token string\">\"192.168.144.11\"</span>\r\n  user: andy\r\n  role:\r\n  - controlplane\r\n  - etcd\r\n- address: <span class=\"token string\">\"192.168.144.12\"</span>\r\n  user: andy\r\n  role:\r\n  - worker\r\n- address: <span class=\"token string\">\"192.168.144.13\"</span>\r\n  user: andy\r\n  role:\r\n  - worker</code></pre></div>\n<h1>Run RKE</h1>\n<p>當我們上述都完成後，即可用以下指令啟動 RKE</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">rke up</code></pre></div>\n<p>完成後我們將會看到以下資訊</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span>.\r\nINFO<span class=\"token punctuation\">[</span>0116<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>addons<span class=\"token punctuation\">]</span> Setting up user addons\r\nINFO<span class=\"token punctuation\">[</span>0116<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>addons<span class=\"token punctuation\">]</span> no user addons defined\r\nINFO<span class=\"token punctuation\">[</span>0116<span class=\"token punctuation\">]</span> Finished building Kubernetes cluster successfully</code></pre></div>\n<p>RKE 至此就已經正式創建完成了，但我們該如何操作 K8S 呢? 當我們使用 rke up 時，該目錄下會產生 kube_config_cluster.yml，這時候我們須叫進行以下操作</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> .kube\r\n<span class=\"token function\">cp</span> kube_config_cluster.yml ~/.kube/config</code></pre></div>\n<p>接下來就可以讓我們來測試一下 nodes 狀況</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get nodes\r\nNAME             STATUS   ROLES               AGE   VERSION\r\n<span class=\"token number\">192.168</span>.144.11   Ready    controlplane,etcd   72m   v1.25.6\r\n<span class=\"token number\">192.168</span>.144.12   Ready    worker              72m   v1.25.6\r\n<span class=\"token number\">192.168</span>.144.13   Ready    worker              72m   v1.25.6</code></pre></div>\n<h2>問題排除</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Failed to get job complete status for job rke-coredns-addon-deploy-job in namespace kube-system</code></pre></div>\n<p>重新 rke up 即可正常</p>\n<h2>結論</h2>\n<p>在這次文章中，我們快速的了解 RKE 怎麼安裝，在過程中我們也可以發現 RKE 安裝的簡易，與傳統安裝 Kubeadm 還要相對的輕鬆，但我們是不是少了什麼? 都使用 RKE 了怎麼可以少了 Rancher GUI 呢? 下次文章就讓我們來看看 RKE 上如何安裝 Rancher。</p>\n<h2>參考</h2>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10259995\">https://ithelp.ithome.com.tw/articles/10259995</a> <br>\r\n<a href=\"https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/kubernetes-cluster-setup/rke1-for-rancher\">https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/kubernetes-cluster-setup/rke1-for-rancher</a> <br>\r\n<a href=\"https://rke.docs.rancher.com/installation\">https://rke.docs.rancher.com/installation</a> <br></p>","frontmatter":{"title":"Install RKE on Ubuntu 20.04","date":"2023-05-01","description":null}},"previous":{"fields":{"slug":"/java-concurrency/05/"},"frontmatter":{"title":"Java Concurrency #05 - Thread 的生命週期"}},"next":{"fields":{"slug":"/docker/簡單說說 Docker 網路/"},"frontmatter":{"title":"簡單說說 Docker 網路"}}},"pageContext":{"id":"5e253fb3-94a8-5a54-9c61-a69dea1fc405","previousPostId":"7fe40828-3311-5ba1-8630-e7eb3654045f","nextPostId":"552d7586-30ff-53ab-a416-01a1787d29dc"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}