{"version":3,"file":"component---src-pages-index-js-e68413d614ee6c521116.js","mappings":"uJA4BA,IAzBe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,OACE,uBAAKC,UAAU,iBAAiB,oBAAmBF,GACjD,0BAAQE,UAAU,iBAChB,gBAAC,EAAAC,KAAI,CAACD,UAAU,eAAeE,GAAG,KAAKN,GAEvC,uBAAKI,UAAU,0BAEf,uBAAKA,UAAU,wBACb,gBAAC,EAAAC,KAAI,CAACD,UAAU,eAAeE,GAAG,KAAI,MACtC,gBAAC,EAAAD,KAAI,CAACD,UAAU,eAAeE,GAAG,UAAS,QAG/C,wBAAMF,UAAU,eAAeH,GAC/B,0BAAQG,UAAU,iBAAgB,MAC7B,IAAIG,MAAOC,cAAc,eAC5B,IACA,qBAAGC,KAAK,4BAA2B,WAEjC,C,+CCyBV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEV,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEU,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBd,MAExC,OACE,gCACE,6BAAQe,EAAkBf,EAAK,MAAMe,EAAiBf,GACtD,wBAAMgB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASjB,IACnC,wBAAMkB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASjB,IACpC,wBAAMgB,KAAK,sBAAsBC,QAASJ,IACzCZ,EACA,C,6GCeP,UAtDkB,IAAwB,UAAvB,KAAEoB,EAAI,SAAEtB,GAAU,EACnC,MAAMuB,GAAkC,QAAtB,EAAAD,EAAKV,KAAKG,oBAAY,aAAtB,EAAwBd,QAAK,QACzCuB,EAAQF,EAAKG,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAAC3B,SAAUA,EAAUC,MAAOsB,GACjC,yBAAG,8JAUP,gBAAC,IAAM,CAACvB,SAAUA,EAAUC,MAAOsB,GACjC,sBAAIK,MAAO,CAAEC,UAAW,SACrBL,EAAMM,KAAIC,IACT,MAAM9B,EAAQ8B,EAAKC,YAAY/B,OAAS8B,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE7B,UAAU,iBACV+B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAA/B,KAAI,CAACC,GAAIwB,EAAKE,OAAOC,KAAMI,SAAS,OACnC,wBAAMA,SAAS,YAAYrC,KAG/B,6BAAQ8B,EAAKC,YAAYO,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQV,EAAKW,SAEfJ,SAAS,kBAIZ,KAIJ,EAWN,MAAMK,EAAO,IAAM,gBAAC,IAAG,CAAC1C,MAAM,M","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">\r\n        <Link className=\"main-heading\" to=\"/\">{title}</Link>\r\n\r\n        <div className=\"global-header-spacing\"></div>\r\n\r\n        <div className=\"global-header-action\">\r\n          <Link className=\"heading-link\" to=\"/\">首頁</Link>\r\n          <Link className=\"heading-link\" to=\"/about\">關於</Link>\r\n        </div>\r\n      </header>\r\n      <main className=\"global-main\">{children}</main>\r\n      <footer className=\"global-footer\">\r\n        © {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"首頁\" />\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/content/blog/\"}}, sort: {frontmatter: {date: DESC}}) {\r\n      nodes {\r\n        fileAbsolutePath\r\n        excerpt(pruneLength: 160)\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"YYYY-MM-DD\")\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","title","children","isRootPath","pathname","className","Link","to","Date","getFullYear","href","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","data","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}